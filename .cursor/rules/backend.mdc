---
description: Backend development rules for FastAPI/Python
globs: ["backend/**/*", "**/*.py"]
alwaysApply: false
---

# Backend Development Rules

## Python Code Style
- Follow PEP 8 style guidelines strictly
- Use type hints for all function parameters and return types
- Use descriptive variable and function names
- Implement proper docstrings for all functions and classes
- Use consistent error handling with proper HTTP status codes
- Follow the dependency injection pattern for FastAPI

## FastAPI Patterns
- Use proper HTTP methods (GET, POST, PUT, DELETE, PATCH)
- Implement consistent response formats using Pydantic models
- Use proper status codes and error messages
- Validate all input data using Pydantic models
- Implement proper authentication and authorization
- Use dependency injection for shared logic and database connections

## File Organization
- Keep API routes in `/routers` directory with logical separation
- Use `/utils` for shared utility functions
- Keep Pydantic models and schemas in `/models` directory
- Implement proper middleware in `/middleware` directory
- Use proper logging configuration in all modules

## Data Validation and Security
- Validate all user inputs using Pydantic models
- Implement proper authentication and authorization middleware
- Use environment variables for sensitive configuration
- Sanitize data before processing and storage
- Implement proper rate limiting for API endpoints
- Use HTTPS in production environments

## Error Handling
- Use FastAPI's HTTPException for API errors
- Implement proper exception handling with try/catch blocks
- Log errors with appropriate context and severity levels
- Return consistent error response formats
- Handle database connection errors gracefully

## Database and Performance
- Use connection pooling for database connections
- Implement proper query optimization
- Use async/await patterns for I/O operations
- Implement proper caching strategies where appropriate
- Handle large file uploads efficiently
