---
alwaysApply: true
---
# Security Guidelines

## Input Validation
- Validate all user inputs at the API boundary
- Use Pydantic models for request/response validation
- Sanitize data before processing and storage
- Implement proper file type checking for uploads
- Validate file sizes and content types

## Authentication and Authorization
- Implement proper authentication middleware
- Use secure session management
- Implement role-based access control (RBAC)
- Use proper JWT token validation
- Implement proper password hashing and storage

## Data Protection
- Use environment variables for sensitive configuration
- Never commit secrets or API keys to version control
- Implement proper data encryption at rest and in transit
- Use HTTPS in production environments
- Implement proper CORS configuration

## File Handling Security
- Validate uploaded files properly (type, size, content)
- Use secure file storage practices
- Implement proper file access controls
- Scan uploaded files for malware when possible
- Use secure file paths and prevent directory traversal

## API Security
- Implement proper rate limiting for API endpoints
- Use proper HTTP status codes for security responses
- Implement request timeout and size limits
- Log security events and failed authentication attempts
- Use proper error handling that doesn't leak sensitive information

## General Security Practices
- Follow OWASP security guidelines
- Implement proper logging for security events
- Use secure coding practices (avoid SQL injection, XSS, etc.)
- Implement proper backup and recovery procedures
- Use principle of least privilege for all access controls
